.. _sec_jupyter_notebooks:

Jupyter Notebooks
=================


Um documento *Jupyter Notebook* possui a extensão ``.ipynb``, organizado em **células** que podem ser de **texto** ou de **código**.


Este documento apresenta alguns exemplos que podem ser usados para criação de células de texto, que serão renderizadas como **HTML** a partir da formatação **Markdown** ou de fórmulas **LaTeX**, e de células de código.


Células Markdown
----------------


A primeira célula que vamos criar no nosso notebook é uma célula Markdown com o título do documento: "Criando um Jupyter Notebook".


Em Markdown, usamos um caracter ``#`` para indicar um texto de cabeçalho de nível 1, dois `##` para o nível 2 e assim por diante:


.. code-block:: markdown

    # Título Nível 1

    ## Título Nível 2

    ### Título Nível 3

    #### Título Nível 4


Logo, nossa primeira célula conterá o seguinte texto:


.. code-block:: markdown

    # Criando um Jupyter Notebook


Em seguida, vamos definir uma nova célula com a subseção "Células com Texto em Markdown":


.. code-block:: markdown

    ## Células com Texto em Markdown


A próxima célula conterá o seguinte texto:

.. code-block:: markdown

    Esta célula é do tipo **`Markdown`**, o que significa que ela contém textos que poderão ser renderizados em HTML.

    A sintaxe Markdown é bastante concisa e pode ser consultada em: [Markdown Cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet).


Em Markdown um link pode ser criado com a seguinte sintaxe:


.. code-block:: markdown

    [Introdução à Programação com Dados Geoespaciais](https://prog-geo.github.io)


Vamos criar uma célula com o seguint texo:


.. code-block:: markdown

    Link do curso [Introdução à Programação com Dados Geoespaciais](https://prog-geo.github.io).


Podemos incluir fórmulas em [LaTeX](https://www.latex-project.org/), como a fórmula da distância de Haversine mostrada abaixo:


.. code-block:: markdown

    Distância de Haversine:

    $$
    d(p, q) = 2r \arcsin{\sqrt{\sin^2({\frac{\phi_2 - \phi_1}{2}}) + \cos{\phi_1} \cos{\phi_2} \sin^2({\frac{\lambda_2 - \lambda_1}{2}})}}
    $$


Podemos incluir eleentos HTML junto com o código Markdown. O trecho abaixo cria uma tabela em HTML:


.. code-block:: markdown

    Exemplo de tabela em HTML:

    <table style="width: 50%; margin: 0; padding: 0; border: 0;">
        <caption>Tabela 1 - Uma tabela usando HTML.</caption>
        <tr>
            <th style="text-align: center; border: 1px solid black">Coluna 1</th>
            <th style="text-align: center; border: 1px solid black">Coluna 2</th>
        </tr>
        <tr>
            <td style="text-align: center; border: 1px solid black">Linha 1 Coluna 1</td>
            <td style="text-align: center; border: 1px solid black">Linha 1 Coluna 2</td>
        </tr>
        <tr>
            <td style="text-align: center; border: 1px solid black">Linha 2 Coluna 1</td>
            <td style="text-align: center; border: 1px solid black">Linha 2 Coluna 2</td>
        </tr>
        <tr>
            <td style="text-align: center; border: 1px solid black">Linha 3 Coluna 1</td>
            <td style="text-align: center; border: 1px solid black">Linha 3 Coluna 2</td>
        </tr>
    </table>


Células contendo vídeos podem ser criadas com o comando mágico de célula ``%%HTML``. Vamos incluir um vídeo do Youtube:


.. code-block:: ipython

    %%HTML

    <iframe width="80%" height="640" src="https://www.youtube-nocookie.com/embed/OQPeRrd81a8" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>


Células de Código Python
------------------------


A célula abaixo possui códigos em Python.


.. code-block:: python

    #
    # Esta célula é do tipo "código",
    # logo você pode escrever qualquer código Python válido!
    #
    # Para executar essa célula, tecle SHIFT+ENTER
    #

    lista_quadrados = [ x**2 for x in range( 1, 11 ) ]

    soma_quadrados = sum( lista_quadrados )

    print( "Lista =", lista_quadrados )

    print( "Soma:", soma_quadrados )


.. note::

    O jupyter Notebook dessa seção pode ser baixado do seguinte link: :download:`exemplo-notebook.ipynb <../code/jupyter/exemplo-notebook.ipynb>`.